name: Update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */20 * * *'  

jobs:
  run-python-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code (source repo)
      uses: actions/checkout@v3

    - name: Install unzip & python dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip zip
        pip install requests
        pip install "requests[socks]"

    - name: Unzip main file
      env:
        ZIP_FILE: ${{ secrets.ZIP_FILE }}
      run: unzip -P "${ZIP_FILE}" runvbk.zip

    - name: Run Python script
      run: python3 run.py

    - name: Zip files (use same ZIP_FILE password)
      env:
        ZIP_FILE: ${{ secrets.ZIP_FILE }}
      run: zip -P "${ZIP_FILE}" v2.zip run.py token1bd.txt

    - name: Cleanup files
      if: always()
      run: rm -f run.py token1bd.txt

    - name: Commit and push v2.zip to same repo (use GITHUB_TOKEN)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "GitHub Action"
        git config user.email "action@github.com"
        git add v2.zip
        git commit -m "Add v2.zip [$(date '+%Y-%m-%d %H:%M:%S')]" || echo "No changes to commit"
        git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git HEAD:main

    - name: Clone target repository
      run: |
        git clone https://x-access-token:${{ secrets.GET_API_TOKEN }}@${{ secrets.GET_URL }} target-repo

    - name: Copy generated files to target repo
      run: |
        cp NS_player.m3u ott_navigator.m3u target-repo/
        mkdir -p target-repo/script_api
        cp script_api/data.json target-repo/script_api/

    - name: Commit and push changes to target repo
      run: |
        cd target-repo
        git config user.name "GitHub Action"
        git config user.email "action@github.com"
        git add .
        git commit -m "Update playlists and api.json [$(date '+%Y-%m-%d %H:%M:%S')]" || echo "No changes to commit"
        git push
